outcome_type == "msd" | outcome_type == "imsd",
!(Detect(study, "Goodwin 2022") & (!is.na(multi_arm1)) & Detect(multi_arm1, "25 mg")),
!(Detect(study, "Goodwin 2022") & (!is.na(multi_arm2)) & Detect(multi_arm2, "25 mg")),
!Detect(study, "Krempien 2023"),
!Detect(study, "Carhart-Harris 2021")
)
data_clinician <- data %>%
filterPoolingData(
primary_timepoint == "1",
is.na(post_crossover) | !Detect(post_crossover, "1"),
!(Detect(study, "Goodwin 2022") & (!is.na(multi_arm1)) & Detect(multi_arm1, "10 mg")),
!(Detect(study, "Goodwin 2022") & (!is.na(multi_arm2)) & Detect(multi_arm2, "10 mg")),
!Detect(study, "Krempien 2023"),
!Detect(study, "Carhart-Harris 2021"),
rating == "clinician",
Detect(instrument_symptom, "depression"),
outcome_type != "response",
outcome_type != "remission",
outcome_type != "change"
) %>%
filterPriorityRule(instrument = c("madrs", "grid-ham-d"))
data_selfreport <- data %>%
filterPoolingData(
primary_timepoint == "1",
is.na(post_crossover) | !Detect(post_crossover, "1"),
!(Detect(study, "Goodwin 2022") & (!is.na(multi_arm1)) & Detect(multi_arm1, "10 mg")),
!(Detect(study, "Goodwin 2022") & (!is.na(multi_arm2)) & Detect(multi_arm2, "10 mg")),
!Detect(study, "Krempien 2023"),
!Detect(study, "Carhart-Harris 2021"),
rating == "self-report",
Detect(instrument_symptom, "depression"),
outcome_type != "response",
outcome_type != "remission",
outcome_type != "change" & outcome_type != "unknown"
) %>%
filterPriorityRule(instrument = c("bdi", "qids-sr", "hads-d", "smdds", "hads"))
# Run the main "overall" model for comparison
main <- runMetaAnalysis(data_main,
# Specify statistical parameters
which.run = "overall", # inverse variance random effects
es.measure = "g", # Hedges' g
method.tau = "REML",
method.tau.ci = "Q-Profile",
hakn = TRUE, # Knapp-Hartung adjustment
# Specify variables
study.var = "study",
arm.var.1 = "condition_arm1",
arm.var.2 = "condition_arm2",
measure.var = "instrument",
w1.var = "n_arm1",
w2.var = "n_arm2",
time.var = "time_weeks",
round.digits = 2
)
# Use metapsyTools' replacement and rerun functions for quickly changing parameters
dep <- main # copy the main model
data(dep) <- data_dep # replace the dataframe in the new model
rerun(dep) # re-run the model
excwl <- main
data(excwl) <- data_excwl
rerun(excwl)
rob <- main
data(rob) <- data_rob
rerun(rob)
parallel <- main
data(parallel) <- data_parallel
rerun(parallel)
crossover <- main
data(crossover) <- data_crossover
rerun(crossover)
expanded <- main
data(expanded) <- data_expanded
rerun(expanded)
outliers <- main
data(outliers) <- data_outliers
rerun(outliers)
fixed <- main
method.tau(fixed) <- "FE" # for this sensitivity analysis, we keep data the same but change parameters
hakn(fixed) <- FALSE
rerun(fixed)
g10 <- main
data(g10) <- data_g10
rerun(g10)
clinician <- main
data(clinician) <- data_clinician
rerun(clinician)
selfreport <- main
data(selfreport) <- data_selfreport
rerun(selfreport)
main <- runMetaAnalysis(data_main,
# Specify statistical parameters
which.run = "overall", # inverse variance random effects
es.measure = "g", # Hedges' g
method.tau = "REML",
method.tau.ci = "Q-Profile",
hakn = TRUE, # Knapp-Hartung adjustment
# Specify variables
study.var = "study",
arm.var.1 = "condition_arm1",
arm.var.2 = "condition_arm2",
measure.var = "instrument",
w1.var = "n_arm1",
w2.var = "n_arm2",
time.var = "time_weeks",
round.digits = 2
)
dep <- runMetaAnalysis(data_dep,
# Specify statistical parameters
which.run = "overall", # inverse variance random effects
es.measure = "g", # Hedges' g
method.tau = "REML",
method.tau.ci = "Q-Profile",
hakn = TRUE, # Knapp-Hartung adjustment
# Specify variables
study.var = "study",
arm.var.1 = "condition_arm1",
arm.var.2 = "condition_arm2",
measure.var = "instrument",
w1.var = "n_arm1",
w2.var = "n_arm2",
time.var = "time_weeks",
round.digits = 2
)
excwl <- runMetaAnalysis(data_excwl,
# Specify statistical parameters
which.run = "overall", # inverse variance random effects
es.measure = "g", # Hedges' g
method.tau = "REML",
method.tau.ci = "Q-Profile",
hakn = TRUE, # Knapp-Hartung adjustment
# Specify variables
study.var = "study",
arm.var.1 = "condition_arm1",
arm.var.2 = "condition_arm2",
measure.var = "instrument",
w1.var = "n_arm1",
w2.var = "n_arm2",
time.var = "time_weeks",
round.digits = 2
)
rob <- runMetaAnalysis(data_rob,
# Specify statistical parameters
which.run = "overall", # inverse variance random effects
es.measure = "g", # Hedges' g
method.tau = "REML",
method.tau.ci = "Q-Profile",
hakn = TRUE, # Knapp-Hartung adjustment
# Specify variables
study.var = "study",
arm.var.1 = "condition_arm1",
arm.var.2 = "condition_arm2",
measure.var = "instrument",
w1.var = "n_arm1",
w2.var = "n_arm2",
time.var = "time_weeks",
round.digits = 2
)
parallel <- runMetaAnalysis(data_parallel,
# Specify statistical parameters
which.run = "overall", # inverse variance random effects
es.measure = "g", # Hedges' g
method.tau = "REML",
method.tau.ci = "Q-Profile",
hakn = TRUE, # Knapp-Hartung adjustment
# Specify variables
study.var = "study",
arm.var.1 = "condition_arm1",
arm.var.2 = "condition_arm2",
measure.var = "instrument",
w1.var = "n_arm1",
w2.var = "n_arm2",
time.var = "time_weeks",
round.digits = 2
)
crossover <- runMetaAnalysis(data_crossover,
# Specify statistical parameters
which.run = "overall", # inverse variance random effects
es.measure = "g", # Hedges' g
method.tau = "REML",
method.tau.ci = "Q-Profile",
hakn = TRUE, # Knapp-Hartung adjustment
# Specify variables
study.var = "study",
arm.var.1 = "condition_arm1",
arm.var.2 = "condition_arm2",
measure.var = "instrument",
w1.var = "n_arm1",
w2.var = "n_arm2",
time.var = "time_weeks",
round.digits = 2
)
expanded <- runMetaAnalysis(data_expanded,
# Specify statistical parameters
which.run = "overall", # inverse variance random effects
es.measure = "g", # Hedges' g
method.tau = "REML",
method.tau.ci = "Q-Profile",
hakn = TRUE, # Knapp-Hartung adjustment
# Specify variables
study.var = "study",
arm.var.1 = "condition_arm1",
arm.var.2 = "condition_arm2",
measure.var = "instrument",
w1.var = "n_arm1",
w2.var = "n_arm2",
time.var = "time_weeks",
round.digits = 2
)
outliers <- runMetaAnalysis(data_outliers,
# Specify statistical parameters
which.run = "overall", # inverse variance random effects
es.measure = "g", # Hedges' g
method.tau = "REML",
method.tau.ci = "Q-Profile",
hakn = TRUE, # Knapp-Hartung adjustment
# Specify variables
study.var = "study",
arm.var.1 = "condition_arm1",
arm.var.2 = "condition_arm2",
measure.var = "instrument",
w1.var = "n_arm1",
w2.var = "n_arm2",
time.var = "time_weeks",
round.digits = 2
)
fixed <- runMetaAnalysis(data_main,
# Specify statistical parameters
which.run = "overall", # inverse variance random effects
es.measure = "g", # Hedges' g
method.tau = "FE", # fixed effects
method.tau.ci = "Q-Profile",
hakn = FALSE,
# Specify variables
study.var = "study",
arm.var.1 = "condition_arm1",
arm.var.2 = "condition_arm2",
measure.var = "instrument",
w1.var = "n_arm1",
w2.var = "n_arm2",
time.var = "study_time_point",
round.digits = 2
)
g10 <- runMetaAnalysis(data_g10,
# Specify statistical parameters
which.run = "overall", # inverse variance random effects
es.measure = "g", # Hedges' g
method.tau = "REML",
method.tau.ci = "Q-Profile",
hakn = TRUE, # Knapp-Hartung adjustment
# Specify variables
study.var = "study",
arm.var.1 = "condition_arm1",
arm.var.2 = "condition_arm2",
measure.var = "instrument",
w1.var = "n_arm1",
w2.var = "n_arm2",
time.var = "time_weeks",
round.digits = 2
)
clinician <- runMetaAnalysis(data_clinician,
# Specify statistical parameters
which.run = "overall", # inverse variance random effects
es.measure = "g", # Hedges' g
method.tau = "REML",
method.tau.ci = "Q-Profile",
hakn = TRUE, # Knapp-Hartung adjustment
# Specify variables
study.var = "study",
arm.var.1 = "condition_arm1",
arm.var.2 = "condition_arm2",
measure.var = "instrument",
w1.var = "n_arm1",
w2.var = "n_arm2",
time.var = "time_weeks",
round.digits = 2
)
selfreport <- runMetaAnalysis(data_selfreport,
# Specify statistical parameters
which.run = "overall", # inverse variance random effects
es.measure = "g", # Hedges' g
method.tau = "REML",
method.tau.ci = "Q-Profile",
hakn = TRUE, # Knapp-Hartung adjustment
# Specify variables
study.var = "study",
arm.var.1 = "condition_arm1",
arm.var.2 = "condition_arm2",
measure.var = "instrument",
w1.var = "n_arm1",
w2.var = "n_arm2",
time.var = "time_weeks",
round.digits = 2
)
# Get response data
data_response <- data %>%
filterPoolingData(
primary_instrument == "1",
primary_timepoint == "1",
outcome_type == "response",
!(Detect(study, "Goodwin 2022") & (!is.na(multi_arm1)) & Detect(multi_arm1, "10 mg")),
!(Detect(study, "Goodwin 2022") & (!is.na(multi_arm2)) & Detect(multi_arm2, "10 mg")),
!Detect(study, "Krempien 2023")
)
data_response <- data_response[order(data_response$year), ]
# Run meta-analysis
response_results <- runMetaAnalysis(data_response,
which.run = "overall",
es.measure = "RR", # risk ratio
es.type = "raw",
method.tau = "PM",
method.tau.ci = "Q-Profile",
method.random.ci = "HK",
hakn = TRUE, # Knapp-Hartung adjustement
# Specify variables
study.var = "study",
arm.var.1 = "condition_arm1",
arm.var.2 = "condition_arm2",
measure.var = "instrument",
w1.var = "n_arm1",
w2.var = "n_arm2",
time.var = "time_weeks",
round.digits = 2
)
# Create simple forest plot of response results
meta::forest(
response_results$model.overall,
sortvar = response_results$model.overall$data$year,
xlab = "Log RR (95% CI)",
leftlabs = c("Study", "Log RR"),
layout = "JAMA"
)
# Get remission data
data_remission <- data %>%
filterPoolingData(
primary_instrument == "1",
primary_timepoint == "1",
outcome_type == "remission",
!(Detect(study, "Goodwin 2022") & (!is.na(multi_arm1)) & Detect(multi_arm1, "10 mg")),
!(Detect(study, "Goodwin 2022") & (!is.na(multi_arm2)) & Detect(multi_arm2, "10 mg")),
!Detect(study, "Krempien 2023")
)
data_remission <- data_remission[order(data_remission$year), ]
# Run meta-analysis
remission_results <- runMetaAnalysis(data_remission,
which.run = "overall",
es.measure = "RR", # risk ratio
es.type = "raw",
method.tau = "PM",
method.tau.ci = "Q-Profile",
method.random.ci = "HK",
hakn = TRUE, # Knapp-Hartung adjustement
# Specify variables
study.var = "study",
arm.var.1 = "condition_arm1",
arm.var.2 = "condition_arm2",
measure.var = "instrument",
w1.var = "n_arm1",
w2.var = "n_arm2",
time.var = "time_weeks",
round.digits = 2
)
# Create simple forest plot of remission results
meta::forest(
remission_results$model.overall,
sortvar = remission_results$model.overall$data$year,
xlab = "Log RR (95% CI)",
leftlabs = c("Study", "Log RR"),
layout = "JAMA"
)
### forest plot for response
# grab heterogeneity values
tau2 <- response_results$model.overall$tau2
lower_tau2 <- response_results$model.overall$lower.tau2
upper_tau2 <- response_results$model.overall$upper.tau2
I2 <- response_results$model.overall$I2
lower_I2 <- response_results$model.overall$lower.I2
upper_I2 <- response_results$model.overall$upper.I2
pval <- response_results$model.overall$pval.Q
# format heterogeneity text
heterogeneity_text <- sprintf(
"Heterogeneity: I² = %.2f%% [%.2f%%, %.2f%%], τ² = %.2f [%.2f, %.2f], p = %.3f",
I2 * 100, lower_I2 * 100, upper_I2 * 100,
tau2, lower_tau2, upper_tau2,
pval
)
png(filename = file.path(basedir, "analysis/psilodep/paperfigs/response_forest_plot_meta.png"), res = 315, width = 4500, height = 1500)
meta::forest(response_results$model.overall,
sortvar = response_results$mode.overall$data$year,
leftcols = c("studlab", "event_arm1", "totaln_arm1", "event_arm2", "totaln_arm2"),
leftlabs = c("Study", "Number of Events", "Total", "Number of Events", "Total"),
rightlabs = c("Log RR", "95%-CI", "Weight"),
fontsize = 9,
col.square = "#000080",
col.diamond = "#000080",
col.predict = "gray",
fontfamily = "Arial",
colgap.forest = "2cm",
xlim = c(0.5, 25),
label.left = "Favors control",
label.right = "Favors intervention",
smlab = "Log Risk Ratio"
)
# add heterogeneity text at the bottom
grid::grid.text(
label = heterogeneity_text,
x = 0.5, # Centered horizontally (normalized coordinates)
y = unit(1.5, "lines"), # Slightly below the plot
just = "center",
gp = grid::gpar(fontsize = 9, fontfamily = "Arial")
)
dev.off()
### forest plot for remission
# grab heterogeneity values
tau2 <- remission_results$model.overall$tau2
lower_tau2 <- remission_results$model.overall$lower.tau2
upper_tau2 <- remission_results$model.overall$upper.tau2
I2 <- remission_results$model.overall$I2
lower_I2 <- remission_results$model.overall$lower.I2
upper_I2 <- remission_results$model.overall$upper.I2
pval <- remission_results$model.overall$pval.Q
# format heterogeneity text
heterogeneity_text <- sprintf(
"Heterogeneity: I² = %.2f%% [%.2f%%, %.2f%%], τ² = %.2f [%.2f, %.2f], p = %.3f",
I2 * 100, lower_I2 * 100, upper_I2 * 100,
tau2, lower_tau2, upper_tau2,
pval
)
png(filename = file.path(basedir, "analysis/psilodep/paperfigs/remission_forest_plot_meta.png"), res = 315, width = 4500, height = 1500)
meta::forest(remission_results$model.overall,
sortvar = remission_results$model.overall$data$year,
leftcols = c("studlab", "event_arm1", "totaln_arm1", "event_arm2", "totaln_arm2"),
leftlabs = c("Study", "Number of Events", "Total", "Number of Events", "Total"),
rightlabs = c("Log RR", "95%-CI", "Weight"),
fontsize = 9,
col.square = "#000080",
col.diamond = "#000080",
col.predict = "gray",
fontfamily = "Arial",
colgap.forest = "2cm",
xlim = c(0.5, 25),
label.left = "Favors control",
label.right = "Favors intervention",
smlab = "Log Risk Ratio"
)
# add heterogeneity text at the bottom
grid::grid.text(
label = heterogeneity_text,
x = 0.5, # Centered horizontally (normalized coordinates)
y = unit(1.5, "lines"), # Slightly below the plot
just = "center",
gp = grid::gpar(fontsize = 9, fontfamily = "Arial")
)
dev.off()
# Fixed response
method.tau(response_results) <- "FE"
hakn(response_results) <- FALSE
rerun(response_results)
# Fixed remission
method.tau(remission_results) <- "FE"
hakn(remission_results) <- FALSE
rerun(remission_results)
# Run fixed meta-analysis
fixed_response_results <- runMetaAnalysis(data_response,
which.run = "overall",
es.measure = "RR", # risk ratio
es.type = "raw",
method.tau = "FE",
method.tau.ci = "Q-Profile",
method.random.ci = "HK",
hakn = FALSE, # Knapp-Hartung adjustement
# Specify variables
study.var = "study",
arm.var.1 = "condition_arm1",
arm.var.2 = "condition_arm2",
measure.var = "instrument",
w1.var = "n_arm1",
w2.var = "n_arm2",
time.var = "study_time_point",
round.digits = 2
)
fixed_response_results
rmarkdown::render(
input = file.path(basedir,"analysis/psilodep/psilodep-meta-analysis.Rmd"),
output_file = file.path(basedir,"docs/datasets/_posts/2025-06-26-psilodep-meta-analysis.md")
)
basedir = "/Users/bsevchik/Documents/GitHub/sypres-docs"
data <- read_csv("/Users/bsevchik/Documents/GitHub/metapsy_psilodep/data.csv")
basedir <- "/Users/bsevchik/Documents/GitHub/sypres-docs"
rmarkdown::render(
input = file.path(basedir,"analysis/psilodep/psilodep-meta-analysis.Rmd"),
output_file = file.path(basedir,"docs/datasets/_posts/2025-06-26-psilodep-meta-analysis.md")
)
#basedir <- "/Users/sps253/Documents/GIT/sypres-docs/"
basedir <- "/Users/bsevchik/Documents/GitHub/sypres-docs" #for brooke
knitr::opts_knit$set(
base.dir = basedir,
base.url = "/"
)
knitr::opts_chunk$set(fig.path = "analysis/psilodep/knitfigs/")
knitr::opts_chunk$set(echo = TRUE)
#basedir <- "/Users/sps253/Documents/GIT/sypres-docs/"
basedir <- "/Users/bsevchik/Documents/GitHub/sypres-docs" #for brooke
knitr::opts_knit$set(
base.dir = basedir,
base.url = "/"
)
knitr::opts_chunk$set(fig.path = "analysis/psilodep/knitfigs/")
knitr::opts_chunk$set(echo = TRUE)
rmarkdown::render(
input = file.path(basedir,"analysis/psilodep/psilodep-meta-analysis.Rmd"),
output_file = file.path(basedir,"docs/datasets/_posts/2025-06-26-psilodep-meta-analysis.md")
)
