#basedir <- "/Users/sps253/Documents/GIT/sypres-docs/"
basedir <- "/Users/bsevchik/Documents/GitHub/sypres-docs" #for brooke
knitr::opts_knit$set(
base.dir = basedir,
base.url = "/"
)
knitr::opts_chunk$set(fig.path = "analysis/psilodep/knitfigs/")
knitr::opts_chunk$set(echo = TRUE)
library(readr)
library(tidyverse)
library(meta)
library(metafor)
library(esc)
library(metapsyTools)
library(dmetar)
library(gt)
# Load data
data <- read_csv("/Users/sps253/Documents/GIT/data-depression-psiloctr/data.csv")
# Load data
#data <- read_csv("/Users/sps253/Documents/GIT/data-depression-psiloctr/data.csv")
data <- read_csv("/Users/bsevchik/Documents/GitHub/metapsy_psilodep/data.csv")
# after release we will replace this with metapsyData load function
# Check data format with checkDataFormat
checkDataFormat(data)
# Check conflicts with checkConflicts
checkConflicts(data)
data_main <- data %>%
filterPoolingData(
primary_instrument == "1",
primary_timepoint == "1",
is.na(post_crossover) | !Detect(post_crossover, "1"),
outcome_type == "msd" | outcome_type == "imsd",
!(Detect(study, "Goodwin 2022") & (!is.na(multi_arm1)) & Detect(multi_arm1, "10 mg")),
!(Detect(study, "Goodwin 2022") & (!is.na(multi_arm2)) & Detect(multi_arm2, "10 mg")),
!Detect(study, "Krempien 2023"),
!Detect(study, "Carhart-Harris 2021")
)
main_results <- runMetaAnalysis(data_main,
# Specify models to run
which.run = c("overall", "outliers"),
which.influence = "overall",
which.outliers = "overall",
# Specify statistical parameters
es.measure = "g", # Hedges' g
method.tau = "REML",
method.tau.ci = "Q-Profile",
hakn = TRUE, # Knapp-Hartung adjustment
# Specify variables
study.var = "study",
arm.var.1 = "condition_arm1",
arm.var.2 = "condition_arm2",
measure.var = "instrument",
w1.var = "n_arm1",
w2.var = "n_arm2",
time.var = "time_weeks",
round.digits = 2
)
summary(main_results$model.overall)
# Create simple forest plot of results
meta::forest(
main_results$model.overall,
sortvar = main_results$model.overall$data$year,
layout = "JAMA"
)
# Run Egger's test
eggers.test(main_results$model.overall)
png(filename = file.path(basedir, "analysis/psilodep/paperfigs/SI_Fig_01.png"), res = 315, width = 2500, height = 1500)
funnel(main_results$model.overall,
studlab = TRUE, # can also use vector with study labels
cex.studlab = 0.7, # adjust size of study labels
cex = 0.7, # axis tick labels and point size
cex.axis = 0.7, # axis number label size
cex.lab = 0.7, # axis title (xlab, ylab) size
cex.main = 0.95, # main title size
xlim = c(-3, 0.2),
col = "steelblue",
pch = 19, # bold solid circle
bg = "white",
xlab = "Standardized Mean Difference (SMD)",
ylab = "Standard Error (SE)",
main = "Funnel Plot of Main Model Continuous Outcomes",
las = 1
)
dev.off()
# Select data for the CHE meta-analysis
data_time <- data %>%
calculateEffectSizes() %>%
filter(
is.na(multi_arm1) | !str_detect(multi_arm1, "10 mg"),
is.na(multi_arm2) | !str_detect(multi_arm2, "10 mg"),
!str_detect(study, "Krempien 2023"),
!str_detect(study, "Carhart-Harris 2021")
) %>%
filterPoolingData(
primary_instrument == "1",
time_days > 0,
post_crossover == 0 | is.na(post_crossover),
outcome_type == "msd" | outcome_type == "imsd"
)
# Run meta-analysis
time_results <- runMetaAnalysis(data_time,
which.run = "threelevel.che",
# Specify statistical parameters
es.measure = "g", # Hedges' g
method.tau = "REML",
method.tau.ci = "Q-Profile",
hakn = TRUE, # Knapp-Hartung adjustment
# Specify variables
study.var = "study",
arm.var.1 = "condition_arm1",
arm.var.2 = "condition_arm2",
measure.var = "instrument",
w1.var = "n_arm1",
w2.var = "n_arm2",
time.var = "time_days",
round.digits = 2
)
time_results$model.threelevel.che
reg <- metaRegression(time_results$model.threelevel.che, ~time_days)
reg
png(filename = file.path(basedir, "analysis/psilodep/paperfigs/SI_Fig_02.png"), res = 315, width = 3000, height = 2200)
regplot(reg, mod = "time_days", xlab = "Time since final dose (days)", ylab = "Hedges' g")
dev.off()
# Build a dataframe for each subgroup and sensitivity analysis
data_dep <- data_main %>%
filterPoolingData(
diagnosis == "dep" | diagnosis == "trd"
)
data_excwl <- data_main %>%
filterPoolingData(
!Detect(condition_arm2, "wl"),
)
data_rob <- data_main %>%
filterPoolingData(
!Detect(rob, "High"),
)
data_parallel <- data_main %>%
filterPoolingData(
design == "parallel"
)
data_crossover <- data_main %>%
filterPoolingData(
design == "crossover"
)
data_expanded <- data %>%
filterPoolingData(
primary_instrument == "1",
primary_timepoint == "1",
outcome_type == "msd" | outcome_type == "imsd",
!(Detect(study, "Goodwin 2022") & (!is.na(multi_arm1)) & Detect(multi_arm1, "10 mg")),
!(Detect(study, "Goodwin 2022") & (!is.na(multi_arm2)) & Detect(multi_arm2, "10 mg")),
!(Detect(study, "Krempien 2023") & (!is.na(multi_arm1)) & Detect(multi_arm1, "12 mg")),
!(Detect(study, "Krempien 2023") & (!is.na(multi_arm2)) & Detect(multi_arm2, "12 mg"))
)
data_outliers <- data_main %>%
filterPoolingData(
!Detect(study, "Davis 2021")
)
data_fixed <- data_main
data_g10 <- data %>%
filterPoolingData(
primary_instrument == "1",
primary_timepoint == "1",
is.na(post_crossover) | !Detect(post_crossover, "1"),
outcome_type == "msd" | outcome_type == "imsd",
!(Detect(study, "Goodwin 2022") & (!is.na(multi_arm1)) & Detect(multi_arm1, "25 mg")),
!(Detect(study, "Goodwin 2022") & (!is.na(multi_arm2)) & Detect(multi_arm2, "25 mg")),
!Detect(study, "Krempien 2023"),
!Detect(study, "Carhart-Harris 2021")
)
data_clinician <- data %>%
filterPoolingData(
primary_timepoint == "1",
is.na(post_crossover) | !Detect(post_crossover, "1"),
!(Detect(study, "Goodwin 2022") & (!is.na(multi_arm1)) & Detect(multi_arm1, "10 mg")),
!(Detect(study, "Goodwin 2022") & (!is.na(multi_arm2)) & Detect(multi_arm2, "10 mg")),
!Detect(study, "Krempien 2023"),
!Detect(study, "Carhart-Harris 2021"),
rating == "clinician",
Detect(instrument_symptom, "depression"),
outcome_type != "response",
outcome_type != "remission",
outcome_type != "change"
) %>%
filterPriorityRule(instrument = c("madrs", "grid-ham-d"))
data_selfreport <- data %>%
filterPoolingData(
primary_timepoint == "1",
is.na(post_crossover) | !Detect(post_crossover, "1"),
!(Detect(study, "Goodwin 2022") & (!is.na(multi_arm1)) & Detect(multi_arm1, "10 mg")),
!(Detect(study, "Goodwin 2022") & (!is.na(multi_arm2)) & Detect(multi_arm2, "10 mg")),
!Detect(study, "Krempien 2023"),
!Detect(study, "Carhart-Harris 2021"),
rating == "self-report",
Detect(instrument_symptom, "depression"),
outcome_type != "response",
outcome_type != "remission",
outcome_type != "change" & outcome_type != "unknown"
) %>%
filterPriorityRule(instrument = c("bdi", "qids-sr", "hads-d", "smdds", "hads"))
# Run the main "overall" model for comparison
main <- runMetaAnalysis(data_main,
# Specify statistical parameters
which.run = "overall", # inverse variance random effects
es.measure = "g", # Hedges' g
method.tau = "REML",
method.tau.ci = "Q-Profile",
hakn = TRUE, # Knapp-Hartung adjustment
# Specify variables
study.var = "study",
arm.var.1 = "condition_arm1",
arm.var.2 = "condition_arm2",
measure.var = "instrument",
w1.var = "n_arm1",
w2.var = "n_arm2",
time.var = "time_weeks",
round.digits = 2
)
# Use metapsyTools' replacement and rerun functions for quickly changing parameters
dep <- main # copy the main model
data(dep) <- data_dep # replace the dataframe in the new model
rerun(dep) # re-run the model
excwl <- main
data(excwl) <- data_excwl
rerun(excwl)
rob <- main
data(rob) <- data_rob
rerun(rob)
parallel <- main
data(parallel) <- data_parallel
rerun(parallel)
crossover <- main
data(crossover) <- data_crossover
rerun(crossover)
expanded <- main
data(expanded) <- data_expanded
rerun(expanded)
outliers <- main
data(outliers) <- data_outliers
rerun(outliers)
fixed <- main
method.tau(fixed) <- "FE" # for this sensitivity analysis, we keep data the same but change parameters
hakn(fixed) <- FALSE
rerun(fixed)
g10 <- main
data(g10) <- data_g10
rerun(g10)
clinician <- main
data(clinician) <- data_clinician
rerun(clinician)
selfreport <- main
data(selfreport) <- data_selfreport
rerun(selfreport)
main <- runMetaAnalysis(data_main,
# Specify statistical parameters
which.run = "overall", # inverse variance random effects
es.measure = "g", # Hedges' g
method.tau = "REML",
method.tau.ci = "Q-Profile",
hakn = TRUE, # Knapp-Hartung adjustment
# Specify variables
study.var = "study",
arm.var.1 = "condition_arm1",
arm.var.2 = "condition_arm2",
measure.var = "instrument",
w1.var = "n_arm1",
w2.var = "n_arm2",
time.var = "time_weeks",
round.digits = 2
)
dep <- runMetaAnalysis(data_dep,
# Specify statistical parameters
which.run = "overall", # inverse variance random effects
es.measure = "g", # Hedges' g
method.tau = "REML",
method.tau.ci = "Q-Profile",
hakn = TRUE, # Knapp-Hartung adjustment
# Specify variables
study.var = "study",
arm.var.1 = "condition_arm1",
arm.var.2 = "condition_arm2",
measure.var = "instrument",
w1.var = "n_arm1",
w2.var = "n_arm2",
time.var = "time_weeks",
round.digits = 2
)
excwl <- runMetaAnalysis(data_excwl,
# Specify statistical parameters
which.run = "overall", # inverse variance random effects
es.measure = "g", # Hedges' g
method.tau = "REML",
method.tau.ci = "Q-Profile",
hakn = TRUE, # Knapp-Hartung adjustment
# Specify variables
study.var = "study",
arm.var.1 = "condition_arm1",
arm.var.2 = "condition_arm2",
measure.var = "instrument",
w1.var = "n_arm1",
w2.var = "n_arm2",
time.var = "time_weeks",
round.digits = 2
)
rob <- runMetaAnalysis(data_rob,
# Specify statistical parameters
which.run = "overall", # inverse variance random effects
es.measure = "g", # Hedges' g
method.tau = "REML",
method.tau.ci = "Q-Profile",
hakn = TRUE, # Knapp-Hartung adjustment
# Specify variables
study.var = "study",
arm.var.1 = "condition_arm1",
arm.var.2 = "condition_arm2",
measure.var = "instrument",
w1.var = "n_arm1",
w2.var = "n_arm2",
time.var = "time_weeks",
round.digits = 2
)
parallel <- runMetaAnalysis(data_parallel,
# Specify statistical parameters
which.run = "overall", # inverse variance random effects
es.measure = "g", # Hedges' g
method.tau = "REML",
method.tau.ci = "Q-Profile",
hakn = TRUE, # Knapp-Hartung adjustment
# Specify variables
study.var = "study",
arm.var.1 = "condition_arm1",
arm.var.2 = "condition_arm2",
measure.var = "instrument",
w1.var = "n_arm1",
w2.var = "n_arm2",
time.var = "time_weeks",
round.digits = 2
)
crossover <- runMetaAnalysis(data_crossover,
# Specify statistical parameters
which.run = "overall", # inverse variance random effects
es.measure = "g", # Hedges' g
method.tau = "REML",
method.tau.ci = "Q-Profile",
hakn = TRUE, # Knapp-Hartung adjustment
# Specify variables
study.var = "study",
arm.var.1 = "condition_arm1",
arm.var.2 = "condition_arm2",
measure.var = "instrument",
w1.var = "n_arm1",
w2.var = "n_arm2",
time.var = "time_weeks",
round.digits = 2
)
expanded <- runMetaAnalysis(data_expanded,
# Specify statistical parameters
which.run = "overall", # inverse variance random effects
es.measure = "g", # Hedges' g
method.tau = "REML",
method.tau.ci = "Q-Profile",
hakn = TRUE, # Knapp-Hartung adjustment
# Specify variables
study.var = "study",
arm.var.1 = "condition_arm1",
arm.var.2 = "condition_arm2",
measure.var = "instrument",
w1.var = "n_arm1",
w2.var = "n_arm2",
time.var = "time_weeks",
round.digits = 2
)
outliers <- runMetaAnalysis(data_outliers,
# Specify statistical parameters
which.run = "overall", # inverse variance random effects
es.measure = "g", # Hedges' g
method.tau = "REML",
method.tau.ci = "Q-Profile",
hakn = TRUE, # Knapp-Hartung adjustment
# Specify variables
study.var = "study",
arm.var.1 = "condition_arm1",
arm.var.2 = "condition_arm2",
measure.var = "instrument",
w1.var = "n_arm1",
w2.var = "n_arm2",
time.var = "time_weeks",
round.digits = 2
)
fixed <- runMetaAnalysis(data_main,
# Specify statistical parameters
which.run = "overall", # inverse variance random effects
es.measure = "g", # Hedges' g
method.tau = "FE", # fixed effects
method.tau.ci = "Q-Profile",
hakn = FALSE,
# Specify variables
study.var = "study",
arm.var.1 = "condition_arm1",
arm.var.2 = "condition_arm2",
measure.var = "instrument",
w1.var = "n_arm1",
w2.var = "n_arm2",
time.var = "study_time_point",
round.digits = 2
)
g10 <- runMetaAnalysis(data_g10,
# Specify statistical parameters
which.run = "overall", # inverse variance random effects
es.measure = "g", # Hedges' g
method.tau = "REML",
method.tau.ci = "Q-Profile",
hakn = TRUE, # Knapp-Hartung adjustment
# Specify variables
study.var = "study",
arm.var.1 = "condition_arm1",
arm.var.2 = "condition_arm2",
measure.var = "instrument",
w1.var = "n_arm1",
w2.var = "n_arm2",
time.var = "time_weeks",
round.digits = 2
)
clinician <- runMetaAnalysis(data_clinician,
# Specify statistical parameters
which.run = "overall", # inverse variance random effects
es.measure = "g", # Hedges' g
method.tau = "REML",
method.tau.ci = "Q-Profile",
hakn = TRUE, # Knapp-Hartung adjustment
# Specify variables
study.var = "study",
arm.var.1 = "condition_arm1",
arm.var.2 = "condition_arm2",
measure.var = "instrument",
w1.var = "n_arm1",
w2.var = "n_arm2",
time.var = "time_weeks",
round.digits = 2
)
selfreport <- runMetaAnalysis(data_selfreport,
# Specify statistical parameters
which.run = "overall", # inverse variance random effects
es.measure = "g", # Hedges' g
method.tau = "REML",
method.tau.ci = "Q-Profile",
hakn = TRUE, # Knapp-Hartung adjustment
# Specify variables
study.var = "study",
arm.var.1 = "condition_arm1",
arm.var.2 = "condition_arm2",
measure.var = "instrument",
w1.var = "n_arm1",
w2.var = "n_arm2",
time.var = "time_weeks",
round.digits = 2
)
# Run Egger's test
eggers.test(expanded$model.overall)
View(expanded)
View(main_results)
# Run Egger's test
eggers.test(expanded$model.overall)
png(filename = file.path(basedir, "analysis/psilodep/paperfigs/SI_Fig_05.png"), res = 315, width = 2500, height = 1500)
funnel(expanded$model.overall,
studlab = TRUE, # can also use vector with study labels
cex.studlab = 0.7, # adjust size of study labels
cex = 0.7, # axis tick labels and point size
cex.axis = 0.7, # axis number label size
cex.lab = 0.7, # axis title (xlab, ylab) size
cex.main = 0.95, # main title size
xlim = c(-3, 0.2),
col = "steelblue",
pch = 19, # bold solid circle
bg = "white",
xlab = "Standardized Mean Difference (SMD)",
ylab = "Standard Error (SE)",
main = "Funnel Plot of Expanded Model Continuous Outcomes",
las = 1
)
dev.off()
# Run Egger's test
eggers.test(expanded$model.overall)
